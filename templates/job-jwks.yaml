{{/* SPDX-FileCopyrightText: 2025 Deutsche Telekom AG

 SPDX-License-Identifier: Apache-2.0*/}}
{{- if .Values.job.jwk.enabled }}
{{- range $realmName, $realm := .Values.realm }}
{{- if or (not (hasKey $realm "replicaCount")) (gt (int $realm.replicaCount) 0) }}
{{- with $ }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "iris.fullname" . }}-jwks-{{ $realmName }}
  namespace: {{ .Release.Namespace }}
  annotations:
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
spec:
  backoffLimit: 0
  template:
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
          {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.deployment.securityContext.pod | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-create-jwks
          securityContext:
            {{- toYaml .Values.deployment.securityContext.container | nindent 12 }}
          image: "{{ include "imageRef" .Values.component.hydra.image }}"
          env:
            - name: REALM_NAME
              value: "{{ $realmName }}"
            - name: HYDRA_ADMIN_SERVICE_PATH
              value: "http://{{ include "iris.fullname" . }}-admin-{{ $realmName }}.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.service.admin.port }}"
          command: [ "sh" ]
          args:
            - "-c"
            - "sh /scripts/jwks-create.sh"
          volumeMounts:
            - name: scripts
              mountPath: /scripts
              readOnly: true
      volumes:
        - name: scripts
          configMap:
            name: {{ include "iris.fullname" . }}
      restartPolicy: Never
{{- end }}
{{- end }}
{{- end }}
{{- end }}